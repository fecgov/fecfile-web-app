import * as generator from './generators.spec';
import { dateToString } from '../reports.spec';
import * as _ from 'lodash';

//    The keys of the objects generated by this function are deliberately not CamelCase.  They specifically mirror the FormControlName values of elements in the Front-End
export function generateReportObject(reportGiven: object = {}): object {
  const reportRandom: object = {
    filing_frequency: generator.f3xFilingFrequency(),
    report_type_category: '',
    report_code: '',
    coverage_from_date: dateToString(generator.date()),
    coverage_through_date: '',
    date_of_election: dateToString(generator.date()),
    state_of_election: generator.state(false), //US Territories included
  };

  const report: object = { ...reportRandom, ...reportGiven };

  if (report['report_type_category'] == '')
    report['report_type_category'] = generator.f3xReportCategory(report['filing_frequency']);
  if (report['report_code'] == '')
    report['report_code'] = generator.f3xReportCode(report['filing_frequency'], report['report_type_category']);
  if (report['coverage_through_date'] == '')
    report['coverage_through_date'] = dateToString(
      generator.f3xCoverageThroughDate(report['coverage_from_date'], report['filing_frequency'])
    );

  return report;
}

export type ConfirmationDetails = {
  email_1: string;
  email_2?: string;
  street_1?: string;
  street_2?: string;
  city?: string;
  state?: string;
  zip?: string;
};
export function generateConfirmationDetails(): ConfirmationDetails {
  const details: ConfirmationDetails = {
    email_1: generator.email(),
  };

  if (_.random(100) % 2 === 0) {
    details.email_2 = generator.email();
  }

  if (_.random(100) % 4 === 0) {
    details.street_1 = generator.street();
    details.city = generator.city();
    details.state = generator.state(true);
    details.zip = generator.zipcode();
    if (_.random(100) % 2 === 0) {
      details.street_2 = generator.apartment();
    }
  }

  return details;
}

export type FilingDetails = {
  first_name: string;
  last_name: string;
  middle_name?: string;
  prefix?: string;
  suffix?: string;
  filing_pw: string;
};
export function generateFilingDetails(): FilingDetails {
  const details: FilingDetails = {
    first_name: generator.firstName(),
    last_name: generator.lastName(),
    filing_pw: generator.fakeFilingPW(),
  };

  if (_.random(100) % 2 === 0) {
    details.middle_name = generator.middleName();
  }
  if (_.random(100) % 10 === 0) {
    details.prefix = generator.prefix();
  }
  if (_.random(100) % 10 === 0) {
    details.suffix = generator.suffix();
  }

  return details;
}
