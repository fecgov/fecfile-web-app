# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  browser-tools: circleci/browser-tools@1.2.3
  node: circleci/node@5.0.0

# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  lint:
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    docker:
      - image: cimg/node:14.18-browsers
    resource_class: large
    steps:
      - checkout

      # If we need to modify the params for install-packages:
      # https://circleci.com/developer/orbs/orb/circleci/node#commands-install-packages
      - node/install-packages:
          override-ci-command: npm install
          app-dir: ~/project/front-end/

      - run:
          name: print the linter version
          command: ./node_modules/.bin/eslint --version
          working_directory: ~/project/front-end/

      - run:
          name: run linter
          command: ./node_modules/.bin/eslint -o ~/project/eslint.json -f json "src/**/*.ts" || echo "Found linting issues" && cat ~/project/eslint.json
          working_directory: ~/project/front-end/

      # Sonar cloud setup and scanning
      - run:
          name: Create sonar-scanner cache directory if it does not exist
          command: mkdir -p /tmp/cache/scanner
      - restore_cache:
          keys:
            - v1-sonarcloud-scanner-4.6.2.2472
      - run:
          name: SonarCloud
          command: |
            set -e
            VERSION=4.6.2.2472
            if [ -z "$SONAR_TOKEN" ]; then
                 echo "You must set SONAR_TOKEN environemnt variable"
                 exit 1
            fi
            SCANNER_DIRECTORY=/tmp/cache/scanner
            export SONAR_USER_HOME=$SCANNER_DIRECTORY/.sonar
            OS="linux"
            echo $SONAR_USER_HOME
            if [[ ! -x "$SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner" ]]; then
              curl -Ol https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$VERSION-$OS.zip
              unzip -qq -o sonar-scanner-cli-$VERSION-$OS.zip -d $SCANNER_DIRECTORY
            fi

            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
            chmod +x $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/jre/bin/java
            $SCANNER_DIRECTORY/sonar-scanner-$VERSION-$OS/bin/sonar-scanner
          environment:
            SONARQUBE_SCANNER_PARAMS: '{"sonar.host.url":"https://sonarcloud.io"}'
      - save_cache:
          key: v1-sonarcloud-scanner-4.6.2.2472
          paths: /tmp/cache/scanner

  unit-test:
    docker:
      - image: cimg/node:14.18-browsers
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      #install-packages documentation: https://circleci.com/developer/orbs/orb/circleci/node#commands-install-packages
      - node/install-packages:
          override-ci-command: npm install
          app-dir: ~/project/front-end/
      - run:
          name: run unit tests
          command: node --max_old_space_size=4000 ./node_modules/@angular/cli/bin/ng test --watch=false
          working_directory: ~/project/front-end/

  e2e-test:
    docker:
      - image: cimg/node:14.18-browsers
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver

      #install-packages documentation: https://circleci.com/developer/orbs/orb/circleci/node#commands-install-packages
      - node/install-packages:
          override-ci-command: npm install
          app-dir: ~/project/front-end/

      - run:
          name: run e2e tests
          command: node --max_old_space_size=4000 ./node_modules/@angular/cli/bin/ng e2e
          working_directory: ~/project/front-end/

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs:
      - lint
#      - unit-test
#      - e2e-test


